// <auto-generated />
using System;
using Mamba.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mamba.Infra.Migrations
{
    [DbContext(typeof(ContextBase))]
    [Migration("20200820235620_Correcao_Estado")]
    partial class Correcao_Estado
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mamba.Domain.Entities.AreaAtuacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_AREA_ATUACAO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodigoUsuarioCadastro")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DAT_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnName("DAT_ULTIMA_ALTERACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DSC_AREA_ATUACAO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ProcessoCadastro")
                        .IsRequired()
                        .HasColumnName("NOM_PROCESSO_CADASTRO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id")
                        .HasName("ID_AREA_ATUACAO");

                    b.ToTable("AREA_ATUACAO");
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_AVALIACAO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aprovado")
                        .HasColumnName("IND_APROVADO")
                        .HasColumnType("bit");

                    b.Property<int?>("CodigoUsuarioCadastro")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DAT_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnName("DAT_ULTIMA_ALTERACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DSC_AVALIACAO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("FuncionarioId")
                        .HasColumnName("ID_FUNCIONARIO")
                        .HasColumnType("int");

                    b.Property<int>("Nota")
                        .HasColumnName("NUM_NOTA")
                        .HasColumnType("int");

                    b.Property<string>("ProcessoCadastro")
                        .IsRequired()
                        .HasColumnName("NOM_PROCESSO_CADASTRO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("RespostaId")
                        .HasColumnName("ID_RESPOSTA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("ID_AVALIACAO");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("RespostaId")
                        .IsUnique();

                    b.ToTable("AVALIACAO");
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CANDIDATO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CidadeId")
                        .HasColumnName("ID_CIDADE")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoUsuarioCadastro")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DAT_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnName("DAT_ULTIMA_ALTERACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessoCadastro")
                        .IsRequired()
                        .HasColumnName("NOM_PROCESSO_CADASTRO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasColumnName("DSC_PROFISSAO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("UsuarioId")
                        .HasColumnName("ID_USUARIO")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("ID_CANDIDATO");

                    b.HasIndex("CidadeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CANDIDATO");
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CARGO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaAtuacaoId")
                        .HasColumnName("ID_AREA_ATUACAO")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoUsuarioCadastro")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DAT_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnName("DAT_ULTIMA_ALTERACAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpresaId")
                        .HasColumnName("ID_EMPRESA")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOM_CARGO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ProcessoCadastro")
                        .IsRequired()
                        .HasColumnName("NOM_PROCESSO_CADASTRO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id")
                        .HasName("ID_CARGO");

                    b.HasIndex("AreaAtuacaoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("CARGO");
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CIDADE")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodigoUsuarioCadastro")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DAT_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnName("DAT_ULTIMA_ALTERACAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstadoId")
                        .HasColumnName("ID_ESTADO")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOM_CIDADE")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ProcessoCadastro")
                        .IsRequired()
                        .HasColumnName("NOM_PROCESSO_CADASTRO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnName("SGL_CIDADE")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.HasKey("Id")
                        .HasName("ID_CIDADE");

                    b.HasIndex("EstadoId");

                    b.ToTable("CIDADE");
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Desafio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_DESAFIO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CargoId")
                        .HasColumnName("ID_CARGO")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoUsuarioCadastro")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnName("DAT_ABERTURA")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DAT_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFechamento")
                        .HasColumnName("DAT_FECHAMENTO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnName("DAT_ULTIMA_ALTERACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DSC_DESAFIO")
                        .HasColumnType("NTEXT");

                    b.Property<int>("EmpresaId")
                        .HasColumnName("ID_EMPRESA")
                        .HasColumnType("int");

                    b.Property<int?>("LimiteInscricao")
                        .HasColumnName("QTD_LIMITE_INSCRICAO")
                        .HasColumnType("int");

                    b.Property<string>("ProcessoCadastro")
                        .IsRequired()
                        .HasColumnName("NOM_PROCESSO_CADASTRO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("NOM_TITULO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id")
                        .HasName("ID_DESAFIO");

                    b.HasIndex("CargoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("DESAFIO");
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_EMPRESA")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnName("NUM_CNPJ")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<int>("CidadeId")
                        .HasColumnName("ID_CIDADE")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoUsuarioCadastro")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DAT_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnName("DAT_ULTIMA_ALTERACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnName("DSC_EMPRESA")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Logo")
                        .HasColumnName("NOM_ARQUIVO_LOGO")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOM_EMPRESA")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ProcessoCadastro")
                        .IsRequired()
                        .HasColumnName("NOM_PROCESSO_CADASTRO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id")
                        .HasName("ID_EMPRESA");

                    b.HasIndex("CidadeId");

                    b.ToTable("EMPRESA");
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ESTADO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodigoUsuarioCadastro")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DAT_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnName("DAT_ULTIMA_ALTERACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOM_ESTADO")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ProcessoCadastro")
                        .IsRequired()
                        .HasColumnName("NOM_PROCESSO_CADASTRO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnName("SGL_ESTADO")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id")
                        .HasName("ID_ESTADO");

                    b.ToTable("ESTADO");
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_FUNCIONARIO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CargoId")
                        .HasColumnName("ID_CARGO")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoUsuarioCadastro")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DAT_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnName("DAT_ULTIMA_ALTERACAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpresaId")
                        .HasColumnName("ID_EMPRESA")
                        .HasColumnType("int");

                    b.Property<string>("ProcessoCadastro")
                        .IsRequired()
                        .HasColumnName("NOM_PROCESSO_CADASTRO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("UsuarioId")
                        .HasColumnName("ID_USUARIO")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("ID_FUNCIONARIO");

                    b.HasIndex("CargoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("FUNCIONARIO");
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Inscricao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_INSCRICAO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aprovado")
                        .HasColumnName("IND_APROVADO")
                        .HasColumnType("bit");

                    b.Property<int>("CandidatoId")
                        .HasColumnName("ID_CANDIDATO")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoUsuarioCadastro")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DAT_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFinalizacao")
                        .HasColumnName("DAT_FINALIZACAO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInscricao")
                        .HasColumnName("DAT_INSCRICAO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnName("DAT_ULTIMA_ALTERACAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("DesafioId")
                        .HasColumnName("ID_DESAFIO")
                        .HasColumnType("int");

                    b.Property<string>("ProcessoCadastro")
                        .IsRequired()
                        .HasColumnName("NOM_PROCESSO_CADASTRO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Resultado")
                        .HasColumnName("DSC_RESULTADO")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id")
                        .HasName("ID_INSCRICAO");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("DesafioId");

                    b.ToTable("INSCRICAO");
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Questao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_QUESTAO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodigoUsuarioCadastro")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DAT_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnName("DAT_ULTIMA_ALTERACAO")
                        .HasColumnType("datetime2");

                    b.Property<int>("DesafioId")
                        .HasColumnName("ID_DESAFIO")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DSC_QUESTAO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ProcessoCadastro")
                        .IsRequired()
                        .HasColumnName("NOM_PROCESSO_CADASTRO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id")
                        .HasName("ID_QUESTAO");

                    b.HasIndex("DesafioId");

                    b.ToTable("QUESTAO");
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Resposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_RESPOSTA")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodigoUsuarioCadastro")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DAT_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnName("DAT_ULTIMA_ALTERACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DSC_RESPOSTA")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("InscricaoId")
                        .HasColumnName("ID_INSCRICAO")
                        .HasColumnType("int");

                    b.Property<string>("ProcessoCadastro")
                        .IsRequired()
                        .HasColumnName("NOM_PROCESSO_CADASTRO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("QuestaoId")
                        .HasColumnName("ID_QUESTAO")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("ID_RESPOSTA");

                    b.HasIndex("InscricaoId");

                    b.HasIndex("QuestaoId");

                    b.ToTable("RESPOSTA");
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_USUARIO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Administrador")
                        .HasColumnName("IND_ADMINISTRADOR")
                        .HasColumnType("bit");

                    b.Property<bool>("Bloqueado")
                        .HasColumnName("IND_BLOQUEADO")
                        .HasColumnType("bit");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnName("NUM_CELULAR")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<int?>("CodigoUsuarioCadastro")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DAT_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnName("DAT_NASCIMENTO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnName("DAT_ULTIMA_ALTERACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("END_EMAIL")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("EmailConfirmado")
                        .HasColumnName("IND_EMAIL_CONFIRMADO")
                        .HasColumnType("bit");

                    b.Property<string>("Foto")
                        .HasColumnName("NOM_ARQUIVO_FOTO")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("LinkGithub")
                        .HasColumnName("DSC_LINK_GITHUB")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LinkLinkedin")
                        .HasColumnName("DSC_LINK_LINKEDIN")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MotivoBloqueio")
                        .HasColumnName("DSC_MOTIVO_BLOQUEIO")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOM_USUARIO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ProcessoCadastro")
                        .IsRequired()
                        .HasColumnName("NOM_PROCESSO_CADASTRO")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("DSC_SENHA")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id")
                        .HasName("ID_USUARIO");

                    b.ToTable("USUARIO");
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Avaliacao", b =>
                {
                    b.HasOne("Mamba.Domain.Entities.Funcionario", "Funcionario")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("FuncionarioId")
                        .IsRequired();

                    b.HasOne("Mamba.Domain.Entities.Resposta", "Resposta")
                        .WithOne("Avaliacao")
                        .HasForeignKey("Mamba.Domain.Entities.Avaliacao", "RespostaId")
                        .IsRequired();
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Candidato", b =>
                {
                    b.HasOne("Mamba.Domain.Entities.Cidade", "Cidade")
                        .WithMany("Candidatos")
                        .HasForeignKey("CidadeId")
                        .IsRequired();

                    b.HasOne("Mamba.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Candidatos")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Cargo", b =>
                {
                    b.HasOne("Mamba.Domain.Entities.AreaAtuacao", "AreaAtuacao")
                        .WithMany("Cargos")
                        .HasForeignKey("AreaAtuacaoId")
                        .IsRequired();

                    b.HasOne("Mamba.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Cargos")
                        .HasForeignKey("EmpresaId")
                        .IsRequired();
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Cidade", b =>
                {
                    b.HasOne("Mamba.Domain.Entities.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId")
                        .IsRequired();
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Desafio", b =>
                {
                    b.HasOne("Mamba.Domain.Entities.Cargo", "Cargo")
                        .WithMany("Desafios")
                        .HasForeignKey("CargoId");

                    b.HasOne("Mamba.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Desafios")
                        .HasForeignKey("EmpresaId")
                        .IsRequired();
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Empresa", b =>
                {
                    b.HasOne("Mamba.Domain.Entities.Cidade", "Cidade")
                        .WithMany("Empresas")
                        .HasForeignKey("CidadeId")
                        .IsRequired();
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Funcionario", b =>
                {
                    b.HasOne("Mamba.Domain.Entities.Cargo", "Cargo")
                        .WithMany("Funcionarios")
                        .HasForeignKey("CargoId");

                    b.HasOne("Mamba.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Funcionarios")
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.HasOne("Mamba.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Funcionarios")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Inscricao", b =>
                {
                    b.HasOne("Mamba.Domain.Entities.Candidato", "Candidato")
                        .WithMany("Inscricoes")
                        .HasForeignKey("CandidatoId")
                        .IsRequired();

                    b.HasOne("Mamba.Domain.Entities.Desafio", "Desafio")
                        .WithMany("Inscricoes")
                        .HasForeignKey("DesafioId")
                        .IsRequired();
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Questao", b =>
                {
                    b.HasOne("Mamba.Domain.Entities.Desafio", "Desafio")
                        .WithMany("Questoes")
                        .HasForeignKey("DesafioId")
                        .IsRequired();
                });

            modelBuilder.Entity("Mamba.Domain.Entities.Resposta", b =>
                {
                    b.HasOne("Mamba.Domain.Entities.Inscricao", "Inscricao")
                        .WithMany("Respostas")
                        .HasForeignKey("InscricaoId")
                        .IsRequired();

                    b.HasOne("Mamba.Domain.Entities.Questao", "Questao")
                        .WithMany("Respostas")
                        .HasForeignKey("QuestaoId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
